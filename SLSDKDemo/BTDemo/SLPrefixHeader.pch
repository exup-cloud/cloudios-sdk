//
//  PrefixHeader.pch
//  SLContractSDK
//
//  Created by 健 王 on 2019/8/12.
//  Copyright © 2019 Karl. All rights reserved.
//

#ifndef PrefixHeader_pch
#define PrefixHeader_pch
#ifdef __OBJC__

#import "SLContractSDK/SLContractSDK.h"
#import "SLConfig.h"
#import "SLBaseCusNavBarController.h"
#import "SLBaseWebController.h"
#import "BTPreloadingView.h"
#import <AFNetworking/AFNetworking.h>
#import <Masonry/Masonry.h>
#import <MJExtension/MJExtension.h>
#import <VerifyCode/NTESVerifyCodeManager.h>
#import "UIButton+Extension.h"
#import "UIView+Frame.h"
#import "UIImage+SLGetImage.h"
#import "UIColor+GetColor.h"
#import "UILabel+BTCreate.h"
#import "UILabel+Extension.h"
#import "BTAlertView.h"
#import "SMProgressHUD+YY.h"

#endif

//iOS 版本
#define SL_MARGIN  SL_getWidth(10.f)
#define MKSystemVersionGreaterOrEqualThan(version) ([[[UIDevice currentDevice] systemVersion] compare:version options:NSCaseInsensitiveSearch] >= NSOrderedSame)
#define SL_IOS8_OR_LATER MKSystemVersionGreaterOrEqualThan(@"8.0")
#define SL_IOS9_OR_LATER MKSystemVersionGreaterOrEqualThan(@"9.0")
#define SL_IOS10_OR_LATER MKSystemVersionGreaterOrEqualThan(@"10.0")

// safe access
#define SL_isNilOrNull(obj) (obj == nil || [obj isEqual:[NSNull null]])
// bundle
#define SL_RESOURCE_LOCAL_FOLDER ([[NSSearchPathForDirectoriesInDomains(NSLibraryDirectory, NSUserDomainMask, YES) lastObject] stringByAppendingPathComponent:@"res"])

#define SL_SL_RESOURCE_BUNDLE_NAME @"SLContractSDK.bundle"
#define SL_SL_RESOURCE_BUNDLE_PATH [[[NSBundle mainBundle] bundlePath] stringByAppendingPathComponent:SL_SL_RESOURCE_BUNDLE_NAME]
#define SL_RESOURCE_BUNDLE [NSBundle bundleWithPath:SL_SL_RESOURCE_BUNDLE_PATH]


#define SL_CONFIGURE_ACCOUNT_INFO ([[SL_DOCUMENT_PATH stringByAppendingPathComponent:@"ic"] stringByAppendingPathExtension:@"plist"])

#define SL_FILE_MANAGER [NSFileManager defaultManager]
#define SL_DOCUMENT_PATH ([NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) lastObject])


#define SL_STATUS_BAR_AND_NAVI_BAR_H (SL_SafeAreaTopHeight)
#define SL_Tab_Bar_H (49.0)

#define SL_PHONE_6_SCREEN_WIDTH (375.f)
#define SL_PHONE_6_SCREEN_HEIGHT (667.f)


#define SL_getWidth(w) ((float)w / SL_PHONE_6_SCREEN_WIDTH * SL_SCREEN_WIDTH)
#define SL_getHeight(h) ((float)h / SL_PHONE_6_SCREEN_HEIGHT * SL_SCREEN_HEIGHT)
#define SL_getPoint(x, y) (CGPointMake((SL_getWidth(x), SL_getHeight(y))))
#define SL_getRect(x, y, w, h) (CGRectMake(SL_getWidth(x), SL_getHeight(y), SL_getWidth(w), SL_getHeight(h)))

#define SL_getHeightWithWHAspect(w, aspect) ((float)(w) / (aspect))
#define SL_getHeightKeepWHAspectAndWidthEqualScreenW(h) ((float)h / SL_PHONE_6_SCREEN_WIDTH * SL_SCREEN_WIDTH)
#define SL_getSizeKeepWHAspect1(w, aspect) (CGSizeMake(SL_getWidth(w), SL_getHeightWithWHAspect(SL_getWidth(w), (aspect))))
#define SL_getSizeKeepWHAspect2(w, h) SL_getSizeKeepWHAspect1(w, (float)w / (float)h)
#define SL_getWidthWithWHAspect(h, aspect) ((float)h * aspect)
// Thread
#define SL_MKAssertMainThread() NSAssert([NSThread isMainThread], @"这个方法必须在主线程调用");
#define SL_MKAssertOtherThread() NSAssert(![NSThread isMainThread], @"这个方法必须在子线程调用");



/*** 机型 ***/

#define SL_isiPhoneX ((MAX([UIScreen mainScreen].bounds.size.width, [UIScreen mainScreen].bounds.size.height) == 896) || (MAX([UIScreen mainScreen].bounds.size.width, [UIScreen mainScreen].bounds.size.height) == 812))
#define SL_isiPad ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPad)


/*** 宽高 ***/

#define SL_SCREEN_BOUNDS   [UIScreen mainScreen].bounds
#define SL_SCREEN_WIDTH    [UIScreen mainScreen].bounds.size.width
#define SL_SCREEN_HEIGHT   [UIScreen mainScreen].bounds.size.height

#define SL_SCREEN_HEIGHT_SCALE  SL_SCREEN_HEIGHT / 667.0f
#define SL_SCREEN_WIDTH_SCALE   SL_SCREEN_WIDTH  / 375.0f

#define SL_SCREEN_HEIGHT_HALF_SCALE  ((SL_SCREEN_HEIGHT_SCALE - 1) * 0.5f + 1)

#define SL_SCREEN_HEIGHT_SCALE_NUMBER(n) SL_SCREEN_HEIGHT / 667.0f * n

#define SL_SCREEN_HEIGHT_HALF_SCALE_NUMBER(n) ((SL_SCREEN_HEIGHT_SCALE - 1) * 0.5f + 1) * n

/// 自定义放大比例
#define SL_SCREEN_HEIGHT_DECIMALS_SCALE_NUMBER(d, n) ((SL_SCREEN_HEIGHT_SCALE - 1) * d + 1) * n

/// iphoneX 顶部圆角高度 (实际是34)
#define     SL_FringeTopHeight      (SL_isiPhoneX ? 34 : 0)
/// iphoneX 导航栏高度
#define     SL_SafeAreaTopHeight    (SL_isiPhoneX ? 88 : (SL_isiPad ? 70 : 64))
/// iphoneX 底部圆角高度 (实际是34)
#define     SL_SafeAreaBottomHeight (SL_isiPhoneX ? 30 : 0)

#define SL_SHOW_CONTRACT_DETAIL             @"SL_SHOW_CONTRACT_DETAIL"
#define SL_CONTRACT_INS                     @"SL_CONTRACT_INS" // 合约账户余额不足
#define SL_UNIT_VOL                         @"SL_UNIT_VOL" // 合约单位

#define SL_LEVERAGE                         @"SL_LEVERAGE" // 杠杆倍数
#define SL_LEVERAGE_NUM                     @"SL_LEVERAGE_NUM" // 杠杆倍数
/*** 颜色 ***/

#define SLColor(r, g, b)     [UIColor colorWithRed:(r)/255.0f green:(g)/255.0f blue:(b)/255.0f alpha:1.0f]
#define SLColorA(r, g, b, a) [UIColor colorWithRed:(r)/255.0f green:(g)/255.0f blue:(b)/255.0f alpha:a]
#define SLRandomColor        CYColor(arc4random_uniform(255), arc4random_uniform(255), arc4random_uniform(255))

#define VERIFY_OUT_TIME                     @"60"

// BTNotification
#define SLNoteCenter [NSNotificationCenter defaultCenter]

#define SLLoadFuturesData_Notification         @"SLLoadFuturesData_Notification"
#define SLLoadContractsModelData_Notification         @"SLLoadContractsModelData_Notification"


#define SL_CONFIG_INFO @"basePath.plist"

#ifdef DEBUG
#define SLLog(...) NSLog((@"%s [Line %d] %@\n"), __PRETTY_FUNCTION__, __LINE__, [NSString stringWithFormat:__VA_ARGS__])
#else
#define SLLog(...)
#endif

#pragma mark - New Notification

/// 实时价格更新
#define SLSocketDataUpdate_Ticker_Notification   @"SLSocketDataUpdate_Ticker_Notification"
/// 深度数据更新
#define SLSocketDataUpdate_Depth_Notification    @"SLSocketDataUpdate_Depth_Notification"
/// 最新成交数据更新
#define SLSocketDataUpdate_Trade_Notification    @"SLSocketDataUpdate_Trade_Notification"
/// 私有信息更新
#define SLSocketDataUpdate_Unicast_Notification  @"SLSocketDataUpdate_Unicast_Notification"



#define SL_SHOW_ERROR_MESSAGE(error)\
if (error != nil && [error isKindOfClass:[NSString class]]) {\
[BTAlertView showTipsInfoWithTitle:@"提示" content:error WithCancelBlock:^{\
}];\
} else if (error != nil) {\
[BTAlertView showTipsInfoWithTitle:@"提示" content:@"数据加载失败，请稍后再试..." WithCancelBlock:^{\
}];\
}\

#define isNilOrNull(obj) (obj == nil || [obj isEqual:[NSNull null]])

#endif
